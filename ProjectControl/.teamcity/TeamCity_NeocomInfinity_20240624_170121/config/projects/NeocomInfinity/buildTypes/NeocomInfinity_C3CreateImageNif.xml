<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="5a9ee4a1-636f-4695-bd5f-5a1a638d33d4" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>C3.Create Image NIF</name>
  <description>Create a new docker image for the application neocom-infinity-frontend</description>
  <settings>
    <options>
      <option name="artifactRules" value="neocom-infinity-frontend/.app-banner.txt&#xA;neocom-infinity-frontend/src/environments =&gt; neocom-infinity-frontend/src/environments&#xA;neocom-infinity-frontend/.deploy =&gt; neocom-infinity-frontend/.deploy&#xA;neocom-infinity-frontend/.env.development&#xA;neocom-infinity-frontend/.env.staging" />
    </options>
    <parameters>
      <param name="env.PROJECT_NAME" value="neocom-infinity-frontend" />
    </parameters>
    <build-runners>
      <runner id="P1_Generate_Environment" name="P1. Generate Environment" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[# G E N E R A T E   E N V I R O N M E N T
# Get the environment configuration and generate all the environment settings to be used on next steps.
#
# - Move to the module that is the source for the configuration
PROJECT_ROOT=%teamcity.build.checkoutDir%/%env.PROJECT_NAME%
WORKING_DIR=$PROJECT_ROOT
DEPLOY_DIR=$WORKING_DIR/.deploy
cd $WORKING_DIR

# TODO - Get the running environment target from the commit type. Tags will go to production. Default is 'staging'.
ENVIRONMENT=staging

# - Generate environment from configuration
npm run env:staging

# - Generate banner
echo '>>> Creating banner'
export BANNER_LOCATION=$WORKING_DIR/.app-banner.txt
echo 'BANNER_LOCATION->'$BANNER_LOCATION
figlet NeoNest `gitversion /showvariable AssemblySemFileVer` > $BANNER_LOCATION
cat $BANNER_LOCATION
figlet $ENVIRONMENT

# - Generate image name from version
IMAGE_NAME=%env.PROJECT_NAME%

# - Print environment configuration
echo '>>> E N V I R O N M E N T'
echo "WORKING_DIR->$WORKING_DIR"
echo "DEPLOY_DIR->$DEPLOY_DIR"
echo "ENVIRONMENT->$ENVIRONMENT"
echo 'IMAGE_NAME->'$IMAGE_NAME
echo "##teamcity[setParameter name='_NEOCOM.WORKING_DIR' value='$WORKING_DIR']"
echo "##teamcity[setParameter name='_NEOCOM.DEPLOY_DIR' value='$DEPLOY_DIR']"
echo "##teamcity[setParameter name='_NEOCOM.ENVIRONMENT' value='$ENVIRONMENT']"
echo "##teamcity[setParameter name='_NEOCOM.IMAGE_NAME' value='$IMAGE_NAME']"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="P2_Generate_Image" name="P2. Generate Image" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[# G E N E R A T E   D O C K E R   I M A G E
# Create a docker image for the NestJS backend
#
cd %_NEOCOM.WORKING_DIR%

# - Generate environment from configuration
. .env.%_NEOCOM.ENVIRONMENT%
echo "PORT->$PORT"
echo "NODE_ENV->$NODE_ENV"
echo "VERSION->$VERSION"
echo "##teamcity[setParameter name='_NEOCOM.PORT' value='$PORT']"
echo "##teamcity[setParameter name='_NEOCOM.NODE_ENV' value='$NODE_ENV']"
echo "##teamcity[setParameter name='_NEOCOM.VERSION' value='$VERSION']"

# - Build the image
echo '>>> Building app'
rimraf node_modules
npm install
npm run build:%_NEOCOM.ENVIRONMENT%

echo "PORT->$PORT"
echo '>>> Building image'
cat %_NEOCOM.DEPLOY_DIR%/dockerfile.template | envsubst > %_NEOCOM.DEPLOY_DIR%/Dockerfile
docker build -f %_NEOCOM.DEPLOY_DIR%/Dockerfile -t %_NEOCOM.IMAGE_NAME% %_NEOCOM.WORKING_DIR%]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="Publish_Tag_the_image" name="P3. Publish &amp; Tag the image" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[# P U B L I S H    I M A G E
# Publish the image to the external repository
# - Tag the image
echo ">>> Tagging image->adamantinoo/%_NEOCOM.TAG%"
TAG=%_NEOCOM.IMAGE_NAME%:%_NEOCOM.VERSION%
echo "##teamcity[setParameter name='_NEOCOM.TAG' value='$TAG']"
docker tag %_NEOCOM.IMAGE_NAME% adamantinoo/$TAG
docker tag %_NEOCOM.IMAGE_NAME% $TAG
docker push adamantinoo/$TAG]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="NeocomInfinity_HttpsGithubComAdamAntinooNeocomInfinityGitRefsHeadsMaster" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

