<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="1513aa6b-3172-499e-aba0-3f1ad79e9ec6" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>A3. Build NIF</name>
  <description>Compile and build the frontend created with Angular framework.</description>
  <settings>
    <parameters>
      <param name="env.PROJECT_NAME" value="neocom-infinity-frontend" />
    </parameters>
    <build-runners>
      <runner id="B1_Generate_environment" name="B1. Generate environment" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[# G E N E R A T E   E N V I R O N M E N T
# Get the environment configuration and generate all the environment settings to be used on next steps.
#
# - Move to the module that is the source for the configuration
PROJECT_ROOT=%teamcity.build.checkoutDir%/%env.PROJECT_NAME%
WORKING_DIR=$PROJECT_ROOT
DEPLOY_DIR=$WORKING_DIR/.deploy
cd $WORKING_DIR

# TODO - Get the running environment target from the commit type. Tags will go to production. Default is 'staging'.
ENVIRONMENT=staging

# - Generate environment from configuration
npm run env:staging]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="nodejs_runner" name="B2. Compile NIF" type="nodejs-runner">
        <parameters>
          <param name="plugin.docker.imageId" value="node:20.12.1-slim" />
          <param name="plugin.docker.imagePlatform" value="linux" />
          <param name="shellScript"><![CDATA[npm install
npm run build]]></param>
          <param name="teamcity.build.workingDir" value="neocom-infinity-frontend" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="NeocomInfinity_HttpsGithubComAdamAntinooNeocomInfinityGitRefsHeadsMaster" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

