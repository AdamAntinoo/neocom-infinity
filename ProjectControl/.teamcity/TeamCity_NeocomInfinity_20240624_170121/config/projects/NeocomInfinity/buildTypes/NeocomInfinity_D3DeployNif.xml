<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="cb9f3969-24cb-46e3-bbea-5a580d4c38e2" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>D3.Deploy NIF</name>
  <description>Create a new docker image for the application neocom-infinity-nest</description>
  <settings>
    <options>
      <option name="artifactRules" value="neocom-infinity-frontend/.deploy =&gt; neocom-infinity-frontend/.deploy" />
    </options>
    <parameters>
      <param name="env.PROJECT_NAME" value="neocom-infinity-frontend" />
    </parameters>
    <build-runners>
      <runner id="Generate_image_NIN" name="Deploy NIF to Kubernetes" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[# D E P L O Y   K U B E R N E T E S
# Deploy the image to the Kubernetes namespace
#
# - Define variables for deployment
WORKING_DIR=%teamcity.build.checkoutDir%/%env.PROJECT_NAME%
DEPLOY_DIR=$WORKING_DIR/.deploy
cd $WORKING_DIR

NODE_ENV=staging
. .env.$NODE_ENV
echo ">>> ENVIRONMENT"
export NAMESPACE=neocom-$NODE_ENV
export ENV=$NODE_ENV
export IMAGE_TAG=%env.PROJECT_NAME%:$VERSION
printenv | sort
echo "<<<"
echo "##teamcity[setParameter name='_NEOCOM.DEPLOY_DIR' value='$DEPLOY_DIR']"
echo "##teamcity[setParameter name='_NEOCOM.NAMESPACE' value='$NAMESPACE']"
echo "##teamcity[setParameter name='_NEOCOM.ENV' value='$ENV']"
echo "##teamcity[setParameter name='_NEOCOM.IMAGE_TAG' value='$IMAGE_TAG']"

# - Generate kubernetes deployment file from template
cat  $DEPLOY_DIR/deployment.template.yaml | envsubst > $DEPLOY_DIR/deployment.yaml
echo ">>> DEPLOYMENT"
cat $DEPLOY_DIR/deployment.yaml
echo "<<<"

kubectl apply -f $DEPLOY_DIR/deployment.yaml]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="NeocomInfinity_HttpsGithubComAdamAntinooNeocomInfinityGitRefsHeadsMaster" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <dependencies>
      <depend-on sourceBuildTypeId="NeocomInfinity_C3CreateImageNif">
        <options>
          <option name="run-build-if-dependency-failed-to-start" value="CANCEL" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

