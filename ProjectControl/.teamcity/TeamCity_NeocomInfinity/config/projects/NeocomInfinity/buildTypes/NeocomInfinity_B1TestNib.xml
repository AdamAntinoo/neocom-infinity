<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="b3a28aec-e53e-4371-b2ba-ed01ae5fd7f8" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>B1.Test NIB</name>
  <description>Compile and build the backend for NeoCom. neocom-infinity-backend</description>
  <settings>
    <options>
      <option name="artifactRules" value="neocom-infinity-backend/build =&gt; neocom-infinity-backend/build" />
    </options>
    <parameters />
    <build-runners>
      <runner id="A1_Build_NIB" name="Unit Test NIB" type="gradle-runner">
        <parameters>
          <param name="teamcity.build.workingDir" value="neocom-infinity-backend" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="ui.gradleRUnner.gradle.build.file" value="build.gradle" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="clean test" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="NeocomInfinity_HttpsGithubComAdamAntinooNeocomInfinityGitRefsHeadsMaster" />
    </vcs-settings>
    <requirements />
    <build-triggers />
    <build-extensions>
      <extension id="perfmon" type="perfmon">
        <parameters>
          <param name="teamcity.perfmon.feature.enabled" value="true" />
        </parameters>
      </extension>
    </build-extensions>
    <dependencies>
      <depend-on sourceBuildTypeId="NeocomInfinity_A1BuildNib">
        <options>
          <option name="run-build-if-dependency-failed-to-start" value="CANCEL" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

