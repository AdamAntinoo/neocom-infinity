// - P L U G I N S
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.2.2.RELEASE'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}
plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'project-report'
    id 'idea'
    id "org.sonarqube" version "3.0"
    id "org.hidetake.swagger.generator" version "2.18.2"
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

// - P R O J E C T   D E F I N I T I O N
group = 'org.dimensinfin.eveonline.neocom.poc'
version = '0.1.0'
archivesBaseName = 'NeoCom.POC.Dependencies'
sourceCompatibility = '11'
targetCompatibility = '11'

// - S O U R C E S
sourceSets {
}

// - D E P E N D E N C I E S
// - P R O D U C T   V E R S I O N S
ext {
    loggerVersion = '1.7.26'
    retrofitVersion = '2.5.0'
    micrometerVersion = '1.1.0'
    ormliteVersion = '4.48'
    resilience4jVersion = '0.17.0'
    springfox = '2.9.2'
    jodaTimeVersion = '2.10.5'
    jacksonVersion = '2.9.8'
}

// - S P R I N G B O O T
ext {
    set('springBootAdminVersion', "2.3.0")
    set('springCloudVersion', "Hoxton.SR8")
    set('testcontainersVersion', "1.14.3")
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}
dependencies {
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}
dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
// - C O R E
dependencies {
    // C O R E
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.annimon:stream:1.1.9'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.auth0:java-jwt:3.3.0'
    implementation 'commons-codec:commons-codec:1.10' // Base64 decoding
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion" // OAuth2 authentication
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion" // HTTP encapsulation and swagger support
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation 'com.google.inject:guice:4.1.0'
    // L O G G I N G
    implementation "com.github.piomin:logstash-logging-spring-boot-starter:1.2.2.RELEASE"
}
dependencies {
    // D I M E N S I N F I N
    implementation 'org.bitbucket.dimensinfin:core-lib:3.2.1'
    // N E O C O M
    implementation 'org.dimensinfin.neocom:neocom-datamanagement:0.20.2'
}