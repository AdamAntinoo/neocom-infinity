# ACCEPTANCE - Docker Composer components
# PROJECT CODE - 52
#
# Docker composer automatically creates a network. The container host matches the container name. To differentiate and create single
#   networks use a directory name that should be unique. The recommended format is: <project>-docker-<environment>
#
# Then configure the postgres database to start on that network.
# The database will be then on location:
#   jdbc:postgresql://neocom-backend-postgres-acceptance:5432/postgres
# To access the database from DBeaver we use the URL should use the localhost address.
#   jdbc:postgresql://0.0.0.0:<database-port>/postgres user=neocom-user password=neocom-password
#
# The list of project ports is on the document:
#   {REPOSITORY}/README.md

version: '3.8'

services:
  neocom-backend-postgres-acceptance:
    container_name: neocom-backend-acceptance-postgres
    image: "postgres:11.2"
    ports:
      - "5281:5432"
    environment:
      - CURRENT_UID=1000
      - POSTGRES_DB=postgres
      - POSTGRES_USER=neocom-user
      - POSTGRES_PASSWORD=neocom-password

  neocom-backend-acceptance-redis:
    container_name: neocom-backend-acceptance-redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./neocom-cache:/data

  acceptance:
    container_name: neocom-backend-acceptance-app
    image: neocom/neocom-infinity.backend
    ports:
      - "5241:9500"
    environment:
      - SPRING_PROFILES_ACTIVE=acceptance
      - SPRING_DATASOURCE_URL=jdbc:postgresql://neocom-backend-acceptance-postgres:5432/postgres"
      - SPRING_DATASOURCE_USERNAME="neocom-user"
      - SPRING_DATASOURCE_PASSWORD="neocom-password"
      - NEOCOM_DATABASE_URL=jdbc:postgresql://neocom-backend-acceptance-postgres:5432/postgres?user=neocom-user&password=neocom-password
      - REDIS_URL=redis://neocom-backend-acceptance-redis:6379
      - NEOCOM_BANNER_LOCATION=./app-banner.txt
      - PROPERTIES_DIRECTORY=/properties-acceptance
      - SDE_DATABASE_PATH=/sde.db
      - APPLICATION_DIRECTORY=./NeoCom.Infinity.Acceptance
      - PROFILE=production

  neocom-backend-acceptance-apisimulator-esi-oauth:
    container_name: neocom-backend-acceptance-apisimulator-esi-oauth
    image: apimastery/apisimulator:1.8
    ports:
      - "5251:6090"
    volumes:
      # WARNING - Use full absolute paths to make this work.
      - /Users/adam/IdeaProjects/neocom-infinity/neocom-infinity-backend/src/test/resources/esioauth-simulation:/esioauth-simulation
    command: "bin/apisimulator start /esioauth-simulation -p 6090"

  #  neocom-backend-acceptance-apisimulator-esi-universe-data:
  #    container_name: neocom-backend-acceptance-apisimulator-esi-universe-data
  #    image: apimastery/apisimulator:1.8
  #    ports:
  #      - "5261:6090"
  #    volumes:
  #      # WARNING - Use full absolute paths to make this work.
  #      - /home/adam/Development/NeoCom0.20/NeoCom-Infinity/NeoCom-Infinity-Backend/src/test/resources/esidata-simulation:/esidata-simulation
  #    command: "bin/apisimulator start /esidata-simulation -p 6090"

  neocom-backend-acceptance-apisimulator-esi-data:
    container_name: neocom-backend-acceptance-apisimulator-esi-data
    image: apimastery/apisimulator:1.8
    ports:
      - "5271:6090"
    volumes:
      # WARNING - Use full absolute paths to make this work.
      - /Users/adam/IdeaProjects/neocom-infinity/neocom-infinity-backend/src/test/resources/esidata-simulation:/esidata-simulation
    command: "bin/apisimulator start /esidata-simulation -p 6090"

#  neocom-backend-acceptance-redis:
#    container_name: neocom-backend-acceptance-redis
#    image: redis:6.2.0
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./docker-data/redis-data:/data
#    environment:
#      - CURRENT_UID=1000
#      - REDIS_REPLICATION_MODE=master
#    command: "redis-server"
