/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * The version of the OpenAPI document: 1.7.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { GetSovereigntyCampaignsParticipant } from './getSovereigntyCampaignsParticipant';


/**
 * 200 ok object
 */
export interface GetSovereigntyCampaigns200Ok { 
    /**
     * Score for all attacking parties, only present in Defense Events. 
     */
    attackers_score?: number;
    /**
     * Unique ID for this campaign.
     */
    campaign_id: number;
    /**
     * The constellation in which the campaign will take place. 
     */
    constellation_id: number;
    /**
     * Defending alliance, only present in Defense Events 
     */
    defender_id?: number;
    /**
     * Score for the defending alliance, only present in Defense Events. 
     */
    defender_score?: number;
    /**
     * Type of event this campaign is for. tcu_defense, ihub_defense and station_defense are referred to as \"Defense Events\", station_freeport as \"Freeport Events\". 
     */
    event_type: GetSovereigntyCampaigns200Ok.EventTypeEnum;
    /**
     * Alliance participating and their respective scores, only present in Freeport Events. 
     */
    participants?: Array<GetSovereigntyCampaignsParticipant>;
    /**
     * The solar system the structure is located in. 
     */
    solar_system_id: number;
    /**
     * Time the event is scheduled to start. 
     */
    start_time: string;
    /**
     * The structure item ID that is related to this campaign. 
     */
    structure_id: number;
}
export namespace GetSovereigntyCampaigns200Ok {
    export type EventTypeEnum = 'tcu_defense' | 'ihub_defense' | 'station_defense' | 'station_freeport';
    export const EventTypeEnum = {
        TcuDefense: 'tcu_defense' as EventTypeEnum,
        IhubDefense: 'ihub_defense' as EventTypeEnum,
        StationDefense: 'station_defense' as EventTypeEnum,
        StationFreeport: 'station_freeport' as EventTypeEnum
    };
}


