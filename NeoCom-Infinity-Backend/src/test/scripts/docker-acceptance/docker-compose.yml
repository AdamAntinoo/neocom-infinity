# TESTING - Docker Composer components
# PROJECT CODE - 52
#
# Docker composer automatically creates a network. The container host matches the container name.
#
# Then configure the postgres database to start on that network. There is a health check so the application
#   will be able to wait until the database has completed the startup.
# The database will be then on location:
#   jdbc:postgresql://postgres-dev:5432/postgres
# To access the database from DBeaver we use the URL
#   jdbc:postgresql://0.0.0.0:5230/postgres user=neocom-user password=neocom-password
#
# The application to be accessed from Postman or the Acceptance Test platform is at location:
#   http://0.0.0.0:5240/actuator/health
#
# SERVICES:
# The dockers created by this file are the next services:
# 5200 - reserved for frontend
# 5210 - [backend-simulator] backend api simulator services
# 5220 - application backend local server
# 5230 - [postgres-acceptance] acceptance postgres database
# 5240 - [acceptance] acceptance application backend server
# 5250 - [apisimulator-esi-oauth] esi-oauth api simulator service
# 5251 - [apisimulator-esi-data] esi eve online data server api simulator service

version: '3.8'

services:
  postgres-acceptance:
    container_name: postgres-acceptance
    image: "postgres:11.2"
    ports:
      - "5230:5432"
    environment:
      - CURRENT_UID=1000
      - POSTGRES_DB=postgres
      - POSTGRES_USER=neocom-user
      - POSTGRES_PASSWORD=neocom-password

  acceptance:
    container_name: neocom-infinity-backend-acceptance
    image: neocom/neocom-infinity.backend
    ports:
      - "5240:9500"
    environment:
      - SPRING_PROFILES_ACTIVE=acceptance
      - NEOCOM_DATABASE_URL=jdbc:postgresql://postgres-acceptance:5432/postgres?user=neocom-user&password=neocom-password
      - JDBC_DATABASE_URL=jdbc:postgresql://postgres-acceptance:5432/postgres
      - DB_USER=neocom-user
      - DB_PASSWORD=neocom-password
      - DEFAULT_BACKEND_SERVER="http://localhost:"
      - NEOCOM_BANNER_LOCATION=./app-banner.txt

  apisimulator-esi-oauth:
    container_name: apisimulator-esi-oauth
    image: apimastery/apisimulator
    ports:
      - "5250:6090"
    volumes:
      # WARNING - Use full absolute paths to make this work.
      - /home/adam/Development/NeoCom0.20/NeoCom-Infinity/NeoCom-Infinity-Backend/src/test/resources/esioauth-simulation:/esioauth-simulation
    command: "bin/apisimulator start /esioauth-simulation -p 6090"

  apisimulator-esi-data:
    container_name: apisimulator-esi-data
    image: apimastery/apisimulator
    ports:
      - "5251:6090"
    volumes:
      # WARNING - Use full absolute paths to make this work.
      - /home/adam/Development/NeoCom0.20/NeoCom-Infinity/NeoCom-Infinity-Backend/src/test/resources/esidata-simulation:/esidata-simulation
    command: "bin/apisimulator start /esidata-simulation -p 6090"
