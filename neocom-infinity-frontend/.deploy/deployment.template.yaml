apiVersion: v1
kind: Service
metadata:
  name: neocom-$APP_CODE-svc
  namespace: $NAMESPACE
spec:
  selector:
    app: $APP_CODE-$ENV
    version: $VERSION
  type: NodePort
  ports:
    - protocol: TCP
      port: 8000
      targetPort: $PORT
      nodePort: 32000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: neocom-frontend-environment
  namespace: $NAMESPACE
data:
  LOGIN_LINK: "$LOGIN_LINK"
  VERSION: "$VERSION"
  TAGVERSION: "$VERSION"
  PORT: "$PORT"
  IMAGE_NAME: "$IMAGE_TAG"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: $APP_CODE-$ENV
  namespace: $NAMESPACE
  labels:
    app: $APP_CODE-$ENV
    version: "$VERSION"
    port: "$PORT"
    module: $MODULE_NAME
spec:
  selector:
    matchLabels:
      app: $APP_CODE-$ENV
  template:
    metadata:
      labels:
        app: $APP_CODE-$ENV
        version: "$VERSION"
        port: "$PORT"
        module: $MODULE_NAME
    spec:
      containers:
      - name: $APP_CODE-$ENV
        image: adamantinoo/$IMAGE_TAG
        env:
        - name: NODE_ENV
          value: "$ENV"
        - name: LOGIN_LINK # Notice that the case is different here
                                     # from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: neocom-frontend-environment           # The ConfigMap this value comes from.
              key: LOGIN_LINK # The key to fetch.
        - name: SEMVER
          valueFrom:
            configMapKeyRef:
              name: neocom-frontend-environment
              key: VERSION
        - name: IMAGE_NAME
          valueFrom:
            configMapKeyRef:
              name: neocom-frontend-environment
              key: IMAGE_NAME
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: neocom-frontend-environment
              key: PORT
        ports:
        - containerPort: $PORT
        imagePullPolicy: Always
      serviceAccountName: default
