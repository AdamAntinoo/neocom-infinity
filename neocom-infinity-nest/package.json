{
  "name": "neocom",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test:watch": "jest --watch",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "jest": "jest --verbose",
    "coverage": "jest --verbose --coverage",
    "test:full": "npm run jest && npm run cucumber",
    "test:cov": "jest --verbose --coverage",
    "package": "npm run build",
    "start:debug": "nest start --debug --watch",
    "start:stage": "NODE_ENV=stage nest start",
    "start:prod": "node dist/main",
    "tag": "figlet NeoNest `gitversion /showvariable MajorMinorPatch`-`gitversion /showvariable CommitsSinceVersionSource` > app-banner.txt",
    "version": "gitversion > .version.json",
    "build": "nest build",
    "start": "npm run start:dev",
    "start:dev": "npm run version && npm run tag && nest start --watch",
    "docker:wiremock:up": "docker-compose -f ./support/docker-wiremock.yml up & ",
    "docker:wiremock:down": "docker-compose -f ./support/docker-wiremock.yml down & ",
    "docker:start": "npm run docker:wiremock:up",
    "docker:stop": "npm run docker:wiremock:down",
    "cucumber": "./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts",
    "acc:nin01": "./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts --tags @NIN01",
    "acc:nin02": "./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts --tags @NIN02",
    "test": "jest --verbose"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.2",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.1",
    "@nestjs/core": "^10.0.0",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^4.0.1",
    "@sniptt/monads": "^0.5.10",
    "cookie-parser": "^1.4.6",
    "neocom-domain": "0.2.4",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "typescript-optional": "^3.0.0-alpha.3"
  },
  "devDependencies": {
    "@cucumber/cucumber": "^10.3.1",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/cookie-parser": "^1.4.7",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "axios": "^1.6.7",
    "cron": "^3.1.6",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "3.2.5",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.module.ts"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "testMatch": [
      "**/*.spec.ts"
    ],
    "moduleNameMapper": {
      "^@App/(.*)$": "<rootDir>/src/application/$1",
      "^@Domain/(.*)$": "<rootDir>/src/domain/$1",
      "^@Infra/(.*)$": "<rootDir>/src/infrastructure/$1"
    },
    "collectCoverage": false,
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "clover"
    ]
  }
}
