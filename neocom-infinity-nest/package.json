{
  "name": "neonest",
  "version": "0.20.5-11",
  "description": "NeoCom Infinity Typescript backend server. Implemented with NestJS technology.",
  "author": "adamantinoo.git@gmail.com",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "build": "nest build",
    "cucumber": "NODE_ENV=acceptance ./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts",
    "cucumber:prefix": "NODE_ENV=acceptance ./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts --tags",
    "acc:nin01": "./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts --tags @NIN01",
    "acc:nin02": "./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts --tags @NIN02",
    "acc:nin03": "npm run cucumber:prefix @NIN03",
    "deploy:staging": ". ./.deploy/deploy.create.image.sh staging",
    "upload:staging": ". ./.deploy/deploy.kubernetes.sh staging",
    "docker:start": "docker-compose -f ./support/docker-wiremock.yml up & ",
    "docker:stop": "docker-compose -f ./support/docker-wiremock.yml down ",
    "tag": "figlet NeoNest `gitversion /showvariable AssemblySemFileVer` > .app-banner.txt",
    "semver": "gitversion /showvariable AssemblySemFileVer > .version.json && echo 'VERSION='`cat .version.json` > .env.version",
    "version:update": "npm version --allow-same-version `cat .version.json`",
    "start:dev": "npm run tag && npm run semver && NODE_ENV=development nest start --watch",
    "start:staging": "npm run tag && npm run semver && VERSION=`cat .version.json` NODE_ENV=staging nest start --watch",
    "start": "npm run start:dev",
    "test": "NODE_ENV=development jest --verbose",
    "test:watch": "NODE_ENV=development jest --verbose --watch",
    "test:cov": "NODE_ENV=development jest --verbose --coverage",
    "test:acc": "NODE_ENV=acceptance ./node_modules/@cucumber/cucumber/bin/cucumber-js ./test/**/*.feature --no-strict --require-module ts-node/register --require-module tsconfig-paths/register --require ./test/acceptance/steps/**/*.ts",
    "test:full": "npm run docker:start && npm run jest && npm run test:acc",
    "deploy:prepare": "npm run tag && npm run semver && npm run version:update && npm run build",
    "debug": "VERSION=`cat .version.json` NODE_ENV=staging nest start --debug --watch"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.2",
    "@nestjs/common": "^10.3.8",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.3.8",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "^2.0.5",
    "@nestjs/platform-express": "^10.3.8",
    "@nestjs/schedule": "^4.0.1",
    "@sniptt/monads": "^0.5.10",
    "cookie-parser": "^1.4.6",
    "neocom-domain": "^0.4.3",
    "neocom-shared": "^0.0.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typescript-optional": "^3.0.0-alpha.3"
  },
  "devDependencies": {
    "@cucumber/cucumber": "^10.6.0",
    "@nestjs/cli": "^10.3.2",
    "@nestjs/schematics": "^10.1.1",
    "@nestjs/testing": "^10.3.8",
    "@types/cookie-parser": "^1.4.7",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.12.7",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "axios": "^1.6.8",
    "cron": "^3.1.7",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.7.0",
    "prettier": "3.2.5",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.4.5"
  },
  "jest": {
    "rootDir": "src",
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "moduleNameMapper": {
      "^@App/(.*)$": "<rootDir>/application/$1",
      "^@Domain/(.*)$": "<rootDir>/domain/$1",
      "^@Infra/(.*)$": "<rootDir>/infrastructure/$1"
    },
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "testEnvironment": "node",
    "testMatch": [
      "**/*.spec.ts"
    ],
    "collectCoverage": false,
    "coverageDirectory": "../coverage",
    "coverageReporters": [
      "json",
      "lcov",
      "text",
      "clover"
    ],
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "src/**/*.ts",
      "!src/**/*.module.ts",
      "!src/application/domain/esi-model/*.(t|j)s"
    ],
    "coveragePathIgnorePatterns": [
      "node_modules",
      "test-config",
      "interfaces",
      "jestGlobalMocks.ts",
      ".module.ts",
      "<rootDir>/src/app/main.ts",
      ".mock.ts",
      "<rootDir>/src/application/domain/esi-model/*.ts"
    ]
  }
}
